plugins {
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.github.ben-manes.versions' version '0.49.0'
    id 'java'
    id 'jacoco'
    id 'io.freefair.aggregate-jacoco-report' version '8.4'
    id 'com.google.cloud.tools.jib' version '3.4.0'
    id 'com.github.spotbugs' version '5.2.1'
    id 'info.solidsoft.pitest' version '1.15.0'
    id 'org.graalvm.buildtools.native' version '0.9.28'
}

spotbugs {
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'low'
    showProgress = true
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
        }
        xml {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.xml")
        }
    }
}

group = 'com.fns'
version = '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://jitpack.io" }
}


bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

test {
    useJUnitPlatform()
    testLogging {
	events "passed", "skipped", "failed"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

jacoco {
    toolVersion = "0.8.11"
}

pitest {
    testPlugin = "junit5"
    jvmArgs = ['-Xmx1024m']
    threads = 5
    targetClasses = ['com.fns.*']
    outputFormats = ['XML', 'HTML']
}

dependencyManagement {
    imports {
        mavenBom "com.wavefront:wavefront-spring-boot-bom:3.0.2"
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.assertj:assertj-core:3.24.2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.pitest:pitest-junit5-plugin:1.2.1')
    if (project.hasProperty("isObserved")) {
        runtimeOnly('com.wavefront:wavefront-spring-boot-starter')
        implementation('io.micrometer:micrometer-tracing-bridge-brave')
        runtimeOnly('io.micrometer:micrometer-tracing-reporter-wavefront')
    }
}

javadoc {
    failOnError = false
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

