plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'java'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '3.1.4'
    id 'com.github.spotbugs' version '4.7.3'
    id 'info.solidsoft.pitest' version '1.6.0'
}

spotbugs {
    toolVersion = '4.2.3'
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'low'
    showProgress = true
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
        }
        xml {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.xml")
        }
    }
}

group = 'com.fns'
version = '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://jitpack.io" }
}


bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

configurations {
    // exclude Logback
    implementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

test {
    useJUnitPlatform()
    testLogging {
	events "passed", "skipped", "failed"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
	xml.enabled = true
	html.enabled = true
	csv.enabled = false
    }
}

pitest {
    testPlugin = "junit5"
    jvmArgs = ['-Xmx1024m']
    threads = 5
    targetClasses = ['io.pivotal.cfapp.*']
    outputFormats = ['XML', 'HTML']
}

dependencies {
    implementation('org.springframework.boot:spring-boot-configuration-processor')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('com.lmax:disruptor:3.4.4')
    runtimeOnly('com.wavefront:wavefront-spring-boot-starter:2.2.0')
    runtimeOnly('io.opentracing.contrib:opentracing-spring-cloud-starter:0.5.9')
    testImplementation('org.assertj:assertj-core:3.20.2')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.junit.jupiter:junit-jupiter-params')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    testImplementation('org.mockito:mockito-core')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	exclude group: 'junit', module: 'junit'
    }
    testImplementation('org.pitest:pitest-junit5-plugin:0.12')
}

javadoc {
    failOnError = false
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

bootJar.enabled = true
jar.enabled = false

test.finalizedBy jacocoTestReport
